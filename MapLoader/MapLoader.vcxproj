<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{ea0818bb-3f02-49d1-9257-b1b01c211068}</ProjectGuid>
    <RootNamespace>MapLoader</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\CppGlobalConfig.props" />
    <Import Project="..\RTCore\RTCoreInclude.props" />
    <Import Project="MapLoaderInclude.props" />
    <Import Project="..\Imgui\ImguiInclude.props" />
    <Import Project="..\tinyobjloader\tinyobjloaderInclude.props" />
    <Import Project="..\GameEngine\GameEngineInclude.props" />
    <Import Project="..\ArchiveParser\ParserInclude.props" />
    <Import Project="..\Vulkan.props" />
    <Import Project="..\tinyxml2\tinyxml2Include.props" />
    <Import Project="..\GLFW\GLFWInclude.props" />
    <Import Project="..\tinygltf\tinygltfInclude.props" />
    <Import Project="..\DebugLibraries.props" />
    <Import Project="..\VulkanShadersDebug.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\CppGlobalConfig.props" />
    <Import Project="..\Optimization.props" />
    <Import Project="..\RTCore\RTCoreInclude.props" />
    <Import Project="MapLoaderInclude.props" />
    <Import Project="..\Imgui\ImguiInclude.props" />
    <Import Project="..\tinyobjloader\tinyobjloaderInclude.props" />
    <Import Project="..\GameEngine\GameEngineInclude.props" />
    <Import Project="..\ArchiveParser\ParserInclude.props" />
    <Import Project="..\Vulkan.props" />
    <Import Project="..\tinyxml2\tinyxml2Include.props" />
    <Import Project="..\GLFW\GLFWInclude.props" />
    <Import Project="..\tinygltf\tinygltfInclude.props" />
    <Import Project="..\Libraries.props" />
    <Import Project="..\VulkanShaders.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\CppGlobalConfig.props" />
    <Import Project="..\RTCore\RTCoreInclude.props" />
    <Import Project="MapLoaderInclude.props" />
    <Import Project="..\Imgui\ImguiInclude.props" />
    <Import Project="..\tinyobjloader\tinyobjloaderInclude.props" />
    <Import Project="..\GameEngine\GameEngineInclude.props" />
    <Import Project="..\ArchiveParser\ParserInclude.props" />
    <Import Project="..\Vulkan.props" />
    <Import Project="..\tinyxml2\tinyxml2Include.props" />
    <Import Project="..\GLFW\GLFWInclude.props" />
    <Import Project="..\tinygltf\tinygltfInclude.props" />
    <Import Project="..\DebugLibraries.props" />
    <Import Project="..\VulkanShadersDebug.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\CppGlobalConfig.props" />
    <Import Project="..\Optimization.props" />
    <Import Project="..\RTCore\RTCoreInclude.props" />
    <Import Project="MapLoaderInclude.props" />
    <Import Project="..\Imgui\ImguiInclude.props" />
    <Import Project="..\tinyobjloader\tinyobjloaderInclude.props" />
    <Import Project="..\GameEngine\GameEngineInclude.props" />
    <Import Project="..\ArchiveParser\ParserInclude.props" />
    <Import Project="..\Vulkan.props" />
    <Import Project="..\tinyxml2\tinyxml2Include.props" />
    <Import Project="..\GLFW\GLFWInclude.props" />
    <Import Project="..\tinygltf\tinygltfInclude.props" />
    <Import Project="..\Libraries.props" />
    <Import Project="..\VulkanShaders.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;STBI_MSC_SECURE_CRT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;STBI_MSC_SECURE_CRT;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="src\MapLoader\Assets\AnimationLibrary.cpp" />
    <ClCompile Include="src\MapLoader\Assets\GameAssetLibrary.cpp" />
    <ClCompile Include="src\MapLoader\Assets\ModelData.cpp" />
    <ClCompile Include="src\MapLoader\Assets\ModelLibrary.cpp" />
    <ClCompile Include="src\MapLoader\Assets\RigAnimationData.cpp" />
    <ClCompile Include="src\MapLoader\Assets\SkinnedModel.cpp" />
    <ClCompile Include="src\MapLoader\Assets\TextureAsset.cpp" />
    <ClCompile Include="src\MapLoader\Assets\TextureLibrary.cpp" />
    <ClCompile Include="src\MapLoader\Character\Character.cpp" />
    <ClCompile Include="src\MapLoader\hello_vulkan.cpp" />
    <ClCompile Include="src\MapLoader\Items\Dyes.cpp" />
    <ClCompile Include="src\MapLoader\Items\EmotionLibrary.cpp" />
    <ClCompile Include="src\MapLoader\Items\ItemData.cpp" />
    <ClCompile Include="src\MapLoader\Items\ItemLibrary.cpp" />
    <ClCompile Include="src\MapLoader\main.cpp" />
    <ClCompile Include="src\MapLoader\Map\FlatEntity.cpp" />
    <ClCompile Include="src\MapLoader\Map\FlatLibrary.cpp" />
    <ClCompile Include="src\MapLoader\Map\FlatModel.cpp" />
    <ClCompile Include="src\MapLoader\obj_loader.cpp" />
    <ClCompile Include="src\MapLoader\Scene\AccelerationStructure.cpp" />
    <ClCompile Include="src\MapLoader\Scene\AnimationPlayer.cpp" />
    <ClCompile Include="src\MapLoader\Scene\RTScene.cpp" />
    <ClCompile Include="src\MapLoader\Scene\SceneObject.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\DescriptorSet.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\DescriptorSetLibrary.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\FrameBuffer.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\RenderPass.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\Shader.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\ShaderLibrary.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\ShaderPipeline.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\VulkanAttributes.cpp" />
    <ClCompile Include="src\MapLoader\Vulkan\VulkanContext.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="shaders\host_device.h" />
    <ClInclude Include="src\MapLoader\Assets\AnimationLibrary.h" />
    <ClInclude Include="src\MapLoader\Assets\GameAssetLibrary.h" />
    <ClInclude Include="src\MapLoader\Assets\ModelData.h" />
    <ClInclude Include="src\MapLoader\Assets\ModelLibrary.h" />
    <ClInclude Include="src\MapLoader\Assets\RigAnimationData.h" />
    <ClInclude Include="src\MapLoader\Assets\SkinnedModel.h" />
    <ClInclude Include="src\MapLoader\Assets\TextureAsset.h" />
    <ClInclude Include="src\MapLoader\Assets\TextureLibrary.h" />
    <ClInclude Include="src\MapLoader\Character\Character.h" />
    <ClInclude Include="src\MapLoader\hello_vulkan.h" />
    <ClInclude Include="src\MapLoader\Items\Dyes.h" />
    <ClInclude Include="src\MapLoader\Items\EmotionLibrary.h" />
    <ClInclude Include="src\MapLoader\Items\ItemData.h" />
    <ClInclude Include="src\MapLoader\Items\ItemLibrary.h" />
    <ClInclude Include="src\MapLoader\Map\FlatEntity.h" />
    <ClInclude Include="src\MapLoader\Map\FlatLibrary.h" />
    <ClInclude Include="src\MapLoader\Map\FlatModel.h" />
    <ClInclude Include="src\MapLoader\obj_loader.h" />
    <ClInclude Include="src\MapLoader\Scene\AccelerationStructure.h" />
    <ClInclude Include="src\MapLoader\Scene\AnimationPlayer.h" />
    <ClInclude Include="src\MapLoader\Scene\RTScene.h" />
    <ClInclude Include="src\MapLoader\Scene\SceneObject.h" />
    <ClInclude Include="src\MapLoader\Vulkan\DescriptorSet.h" />
    <ClInclude Include="src\MapLoader\Vulkan\DescriptorSetLibrary.h" />
    <ClInclude Include="src\MapLoader\Vulkan\FrameBuffer.h" />
    <ClInclude Include="src\MapLoader\Vulkan\RenderPass.h" />
    <ClInclude Include="src\MapLoader\Vulkan\Shader.h" />
    <ClInclude Include="src\MapLoader\Vulkan\ShaderLibrary.h" />
    <ClInclude Include="src\MapLoader\Vulkan\ShaderPipeline.h" />
    <ClInclude Include="src\MapLoader\Vulkan\VulkanAttributes.h" />
    <ClInclude Include="src\MapLoader\Vulkan\VulkanContext.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ArchiveParser\ArchiveParser.vcxproj">
      <Project>{01d10ca8-8e23-4880-b235-786919567bc4}</Project>
    </ProjectReference>
    <ProjectReference Include="..\CryptoPP\CryptoPP.vcxproj">
      <Project>{9a0fd646-a5fa-407e-bf35-541cfad331d8}</Project>
    </ProjectReference>
    <ProjectReference Include="..\GameEngine\GameEngine.vcxproj">
      <Project>{47e24c64-85dd-4f64-8761-a13fd4d198ec}</Project>
    </ProjectReference>
    <ProjectReference Include="..\RTCore\RTCore.vcxproj">
      <Project>{7a79a25a-bff9-4d7a-8c67-ba520116ca14}</Project>
    </ProjectReference>
    <ProjectReference Include="..\tinyxml2\tinyxml2.vcxproj">
      <Project>{53acfb6b-d0e7-48da-8135-ca878d404819}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="shaders\frag_shader.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo $(VULKAN_SDK)/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/frag_shader.frag.spv $(ProjectDir)/shaders/frag_shader.frag
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/frag_shader.frag.spv $(ProjectDir)/shaders/frag_shader.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/frag_shader.frag.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\frag_shader.frag.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/frag_shader.frag.spv $(ProjectDir)/shaders/frag_shader.frag
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/frag_shader.frag.spv $(ProjectDir)/shaders/frag_shader.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/frag_shader.frag.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\frag_shader.frag.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\passthrough.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/passthrough.vert.spv $(ProjectDir)/shaders/passthrough.vert
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/passthrough.vert.spv $(ProjectDir)/shaders/passthrough.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/passthrough.vert.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\passthrough.vert.spv;%(Outputs)</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/passthrough.vert.spv $(ProjectDir)/shaders/passthrough.vert
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/passthrough.vert.spv $(ProjectDir)/shaders/passthrough.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/passthrough.vert.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\passthrough.vert.spv;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\post.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/post.frag.spv $(ProjectDir)/shaders/post.frag
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/post.frag.spv $(ProjectDir)/shaders/post.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/post.frag.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\post.frag.spv;%(Outputs)</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/post.frag.spv $(ProjectDir)/shaders/post.frag
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/post.frag.spv $(ProjectDir)/shaders/post.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/post.frag.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\post.frag.spv;%(Outputs)</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\anim.comp">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/anim.comp.spv $(ProjectDir)/shaders/anim.comp
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/anim.comp.spv $(ProjectDir)/shaders/anim.comp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/anim.comp.spv $(ProjectDir)/shaders/anim.comp
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/anim.comp.spv $(ProjectDir)/shaders/anim.comp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/anim.comp.spv</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/anim.comp.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\anim.comp.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\anim.comp.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <None Include="shaders\materialTextureAvailability.glsl" />
    <None Include="shaders\raycommon.glsl" />
    <None Include="shaders\raytrace-rahit.glsl" />
    <CustomBuild Include="shaders\raytrace.rahit">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rahit.spv $(ProjectDir)/shaders/raytrace.rahit
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rahit.spv $(ProjectDir)/shaders/raytrace.rahit
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/raytrace.rahit.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\raytrace.rahit.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\raytrace-rahit.glsl;$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rahit.spv $(ProjectDir)/shaders/raytrace.rahit
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rahit.spv $(ProjectDir)/shaders/raytrace.rahit
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/raytrace.rahit.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\raytrace.rahit.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\raytrace-rahit.glsl;$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\raytrace.rchit">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rchit.spv $(ProjectDir)/shaders/raytrace.rchit
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rchit.spv $(ProjectDir)/shaders/raytrace.rchit
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/raytrace.rchit.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\raytrace.rchit.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;$(ProjectDir)\shaders\materialTextureAvailability.glsl;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rchit.spv $(ProjectDir)/shaders/raytrace.rchit
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rchit.spv $(ProjectDir)/shaders/raytrace.rchit
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/raytrace.rchit.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\raytrace.rchit.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\raytrace.rgen">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rgen.spv $(ProjectDir)/shaders/raytrace.rgen
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rgen.spv $(ProjectDir)/shaders/raytrace.rgen
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/raytrace.rgen.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\raytrace.rgen.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rgen.spv $(ProjectDir)/shaders/raytrace.rgen
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rgen.spv $(ProjectDir)/shaders/raytrace.rgen
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/raytrace.rgen.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\raytrace.rgen.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\raytrace.rmiss">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rmiss.spv $(ProjectDir)/shaders/raytrace.rmiss
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rmiss.spv $(ProjectDir)/shaders/raytrace.rmiss
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/raytrace.rmiss.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\raytrace.rmiss.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rmiss.spv $(ProjectDir)/shaders/raytrace.rmiss
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytrace.rmiss.spv $(ProjectDir)/shaders/raytrace.rmiss
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/raytrace.rmiss.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\raytrace.rmiss.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\raytraceShadow.rahit">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rahit.spv $(ProjectDir)/shaders/raytraceShadow.rahit
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rahit.spv $(ProjectDir)/shaders/raytraceShadow.rahit
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/raytraceShadow.rahit.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\raytraceShadow.rahit.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\raytrace-rahit.glsl;$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rahit.spv $(ProjectDir)/shaders/raytraceShadow.rahit
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rahit.spv $(ProjectDir)/shaders/raytraceShadow.rahit
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/raytraceShadow.rahit.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\raytraceShadow.rahit.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\raytrace-rahit.glsl;$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\raytraceShadow.rchit">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rchit.spv $(ProjectDir)/shaders/raytraceShadow.rchit
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rchit.spv $(ProjectDir)/shaders/raytraceShadow.rchit
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/raytraceShadow.rchit.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\raytraceShadow.rchit.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rchit.spv $(ProjectDir)/shaders/raytraceShadow.rchit
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rchit.spv $(ProjectDir)/shaders/raytraceShadow.rchit
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/raytraceShadow.rchit.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\raytraceShadow.rchit.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\raytraceShadow.rmiss">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rmiss.spv $(ProjectDir)/shaders/raytraceShadow.rmiss
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rmiss.spv $(ProjectDir)/shaders/raytraceShadow.rmiss
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/raytraceShadow.rmiss.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\raytraceShadow.rmiss.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rmiss.spv $(ProjectDir)/shaders/raytraceShadow.rmiss
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/raytraceShadow.rmiss.spv $(ProjectDir)/shaders/raytraceShadow.rmiss
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/raytraceShadow.rmiss.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\raytraceShadow.rmiss.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\raycommon.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\vert_shader.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/vert_shader.vert.spv $(ProjectDir)/shaders/vert_shader.vert
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/vert_shader.vert.spv $(ProjectDir)/shaders/vert_shader.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/vert_shader.vert.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\vert_shader.vert.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/vert_shader.vert.spv $(ProjectDir)/shaders/vert_shader.vert
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/vert_shader.vert.spv $(ProjectDir)/shaders/vert_shader.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/vert_shader.vert.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\vert_shader.vert.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <None Include="shaders\wavefront.glsl" />
    <CustomBuild Include="shaders\wireframe.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/wireframe.frag.spv $(ProjectDir)/shaders/wireframe.frag
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/wireframe.frag.spv $(ProjectDir)/shaders/wireframe.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/wireframe.frag.spv $(ProjectDir)/shaders/wireframe.frag
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/wireframe.frag.spv $(ProjectDir)/shaders/wireframe.frag
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/wireframe.frag.spv</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/wireframe.frag.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\wireframe.frag.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\wireframe.frag.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="shaders\wireframe.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/wireframe.vert.spv $(ProjectDir)/shaders/wireframe.vert
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/wireframe.vert.spv $(ProjectDir)/shaders/wireframe.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd $(ProjectDir)
if %errorlevel% neq 0 goto :cmEnd
B:
if %errorlevel% neq 0 goto :cmEnd
echo B:/VulkanSDK/1.3.239.0/bin/glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/wireframe.vert.spv $(ProjectDir)/shaders/wireframe.vert
if %errorlevel% neq 0 goto :cmEnd
$(VULKAN_SDK)\bin\glslangValidator.exe -g --target-env vulkan1.2 -o $(ProjectDir)/spv/wireframe.vert.spv $(ProjectDir)/shaders/wireframe.vert
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating $(ProjectName)/spv/wireframe.vert.spv</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating $(ProjectName)/spv/wireframe.vert.spv</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spv\wireframe.vert.spv;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spv\wireframe.vert.spv;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\shaders\wavefront.glsl;$(ProjectDir)\shaders\host_device.h;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>